= render partial: 'spots/header'

%main.spots__show#main
  .spots__show__contents
    .spots__show__contents__top
      .spots__show__contents__top__images
        %ul.spots__show__contents__top__images__main.slider-for
          - @spot.photos.each_with_index do |photo, i|
            %li
              = image_tag @spot.photos[i].image.to_s if @spot.photos[i]

        %ul.spots__show__contents__top__images__nav.slider-nav
          - if @spot.photos.length > 1
            - @spot.photos.each_with_index do |photo, i|
              %li
                = image_tag @spot.photos[i].image.to_s if @spot.photos[i]
      .spots__show__contents__top__info
        .spots__show__contents__top__info__title
          %h2
            = @spot.title if @spot.title

        .spots__show__contents__top__info__prefecture#address
          %p
            - if @spot.prefecture
              = "#{@spot.prefecture.parent.name} #{@spot.prefecture.name}"

        .spots__show__contents__top__info__text
          %p
            = simple_format(@spot.text) if @spot.text

    .spots__show__contents__middle
      .spots__show__contents__middle__maps
        %p.spots__show__contents__middle__maps__heading
          だいたいこの辺
        - if @spot.address.present?
          %input{name: 'address_for_map', type: 'hidden', value: @spot.prefecture.parent.name + ' ' + @spot.prefecture.name + ' ' + @spot.address, id: 'address_for_map'}
        - else 
          %input{name: 'address_for_map', type: 'hidden', value: @spot.prefecture.parent.name + ' ' + @spot.prefecture.name, id: 'address_for_map'}

        #map.spots__show__contents__middle__maps__google-map
      
      .spots__show__contents__middle__chart
        %canvas{id: "myChart0"}.mychart
          
      .spots__show__contents__middle__bottom
        .spots__show__contents__middle__bottom__info
          .spots__show__contents__middle__bottom__info__author
            = "投稿者：#{@spot.author.nickname if @spot.author}"
          .spots__show__contents__middle__bottom__info__date
            = "投稿日：#{@spot.created_at.strftime('%Y/%m/%d')}"
          .spots__show__contents__middle__bottom__info__like
            - if user_signed_in?
              - if @spot.liked_users.exists?(id: [current_user.id])
                - like = @spot.likes.find_by(user_id: current_user.id)
                = link_to spot_like_path(@spot, like.id), method: :delete do
                  いいね！：
                  = icon('fas','heart')
                  %span.spots__show__contents__middle__bottom__info__like__count
                    = @spot.liked_users.count
              - else
                = link_to spot_likes_path(@spot), method: :post do
                  いいね！：
                  = icon('fas','heart')
                  %span.spots__show__contents__middle__bottom__info__like__count
                    = @spot.liked_users.count
            - else
              いいね！：
              = icon('fas','heart')
              %span.spots__show__contents__middle__bottom__info__like__count
                = @spot.liked_users.count

        .spots__show__contents__middle__bottom__btns
          - if current_user == @spot.author
            %ul
              %li.spots__show__contents__middle__bottom__row.spots__show__contents__right__bottom__row__element__edit
                = link_to edit_spot_path(@spot), data: {turbolinks: false} do
                  = icon('fas', 'edit')
                  編集する
              %li.spots__show__contents__middle__bottom__row.spots__show__contents__right__bottom__row__element__delete
                = link_to @spot, method: :delete, data: { confirm: 'この記事を削除します。よろしいですか？' } do
                  = icon('far', 'trash-alt')
                  記事の削除

    .spots__show__contents__comments
      .spots__show__contents__comments__form
        - if user_signed_in?
          = form_with model: [@spot, @comment], local: true do |f|
            = f.text_area :comment, placeholder: "コメントを投稿しよう! (140文字まで)", rows: 3
            = f.submit

      .spots__show__contents__comments__comment

        - if @comments.present?
          %h2
            Comments
          = render partial: 'spots/comment', collection: @comments, as: 'comment'



:javascript
    let address = $('#address_for_map').val();
    let map;
    let geocoder
    function initMap() {
      geocoder = new google.maps.Geocoder();

      map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -34.397, lng: 150.644},
      zoom: 15
      });
      geocoder.geocode( { 'address': address }, function(results, status) {
        if(status == 'OK') {
          map.setCenter(results[0].geometry.location);
          var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
          });
        } else {
          alert('error' + status)
        }
      });
      
    }

= javascript_include_tag @google, async: 'defer'
